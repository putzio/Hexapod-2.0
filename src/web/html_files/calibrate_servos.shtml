<!DOCTYPE html>
<html>
  <head>
    <title>Servo Calibration</title>
    <link
      href="https://fonts.googleapis.com/icon?family=Material+Icons"
      rel="stylesheet"
    />
    <style>
      body {
        font-family: Arial, sans-serif;
        text-align: center;
        background-color: #222;
        color: #fff;
      }

      .container {
        max-width: 400px;
        margin: 50px auto;
        padding: 20px;
        background-color: #333;
        border-radius: 10px;
        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
      }

      .control-buttons {
        display: flex;
        justify-content: center;
        margin: 10px;
      }

      .arrow-buttons {
        font-size: 24px;
        width: 50px;
        height: 50px;
        line-height: 50px;
        border: none;
        background-color: #af00c3;
        color: #fff;
        cursor: pointer;
        border-radius: 50%;
        display: flex;
        align-items: center;
        justify-content: center;
        margin: 10px;
      }

      .arrow-buttons:hover {
        background-color: #af00c3;
      }

      .gait-select {
        margin: 10px 0;
      }

      .gait-select select {
        font-size: 16px;
        padding: 5px;
        background-color: #af00c3; /* Updated background color */
        color: #fff; /* Text color */
      }

      .speed-slider-container {
        margin: 10px 0;
      }

      .speed-label {
        font-size: 16px;
      }

      .speed-slider {
        width: 100%;
        /*background-color: #af00c3; /* Updated background color */
      }
      .no-link-underline {
        text-decoration: none; /* Removes the underline from the link */
        color: white; /* Ensures that the link text color remains unchanged */
        display: inline-block;
        background-color: #af00c3;
        padding: 5px 20px; /* Adjust padding for better visual appearance */
      }
    </style>
  </head>
  <body>
    <div class="container">
      <h1>Servo Calibration</h1>
      <div class="control-buttons">
        <a href="index.shtml"
          ><button class="no-link-underline" onclick="calibration('stop')">
            Calibrate Servos
          </button></a
        >
      </div>
      <h2>Choose Servo</h2>
      <div class="control-buttons">
        <button class="arrow-buttons" onclick="servo('left')">
          <i class="material-icons">arrow_back</i>
        </button>
        <button class="arrow-buttons" onclick="servo('right')">
          <i class="material-icons">arrow_forward</i>
        </button>
      </div>
      <h2>
        Calibrate servo:
        <!--#servo-->
      </h2>
      <div class="control-buttons">
        <button class="arrow-buttons" onclick="calibration('left')">
          <i class="material-icons">arrow_back</i>
        </button>
        <button class="arrow-buttons" onclick="calibration('right')">
          <i class="material-icons">arrow_forward</i>
        </button>
      </div>
      <div>
        <p>
          Servo1:
          <!--#s1-->
        </p>
        <p>
          Servo2:
          <!--#s2-->
        </p>
        <p>
          Servo3:
          <!--#s3-->
        </p>
        <p>
          Servo4:
          <!--#s4-->
        </p>
        <p>
          Servo5:
          <!--#s5-->
        </p>
        <p>
          Servo6:
          <!--#s6-->
        </p>
        <p>
          Servo7:
          <!--#s7-->
        </p>
        <p>
          Servo8:
          <!--#s8-->
        </p>
        <p>
          Servo9:
          <!--#s9-->
        </p>
        <p>
          Servo10:
          <!--#s10-->
        </p>
        <p>
          Servo11:
          <!--#s11-->
        </p>
        <p>
          Servo12:
          <!--#s12-->
        </p>
      </div>
    </div>

    <script>
      let currentSpeed = 5;

      function servo(index) {
        console.log(`change servo: ${index}`);
        // You would send commands to the robot's backend server here
        if (index === "left") {
          sendRequest("/calibration.cgi?servo=left");
        } else if (index === "right") {
          sendRequest("/calibration.cgi?servo=right");
        }
      }
      function calibration(changeValue) {
        console.log(`Calibrate by ${changeValue}`);
        // You would send commands to the robot's backend server here
        if (changeValue === "left") {
          sendRequest("/calibration.cgi?calibration=left");
        } else if (changeValue === "right") {
          sendRequest("/calibration.cgi?calibration=right");
        }
        if (changeValue === "stop") {
          sendRequest("/calibration.cgi?calibration=stop");
        }
      }
      // Function to send the HTTP request to the server
      function sendRequest(url) {
        // Create a new XMLHttpRequest object
        var xhr = new XMLHttpRequest();

        // Configure the HTTP method (GET in this case) and the URL
        xhr.open("GET", url, true);

        // Set up a callback function to handle the response from the server
        xhr.onreadystatechange = function () {
          if (xhr.readyState == XMLHttpRequest.DONE) {
            // Handle the response from the server if needed
            if (xhr.status == 200) {
              console.log("Request sent successfully");
            } else {
              console.log("Error sending request");
            }
          }
        };

        // Send the request
        xhr.send();
      }

      const refreshButtons = document.getElementsByClassName("arrow-buttons");

      // Attach the event listener to each button
      for (let i = 0; i < refreshButtons.length; i++) {
        refreshButtons[i].addEventListener("click", function () {
          setTimeout(refresh, 500);
        });

        function refresh() {
          location.reload();
        }
      }
    </script>
  </body>
</html>
